{"version":3,"file":"idmc.umd.js","sources":["../src/global/default.ts","../src/helpers/util.ts","../src/core/bll/save.ts","../src/core/bll/remove.ts","../src/core/bll/update.ts","../src/core/bll/query.ts","../src/core/index.ts","../src/index.ts"],"sourcesContent":["/*\n * @Author: tiw\n * @LastEditors: Please set LastEditors\n * @Description: 默认数据\n */\n\nimport { DefaultKeyTarget } from '../types'\n\nexport const KEY_NAME: DefaultKeyTarget = '__key__'\n","/*\n * @Author: tiw\n * @LastEditors: Please set LastEditors\n * @Description:\n */\nimport { KEY_NAME } from '../global/default'\nimport { AssertParam, CoreParam, Intruder } from '../types'\nconst random = Math.random()\nconst toStringType = Object.prototype.toString\n\n/**\n * @description: TAG 生成文档的唯一标识符\n * @param {Number} index\n * @return { key } 唯一标识符\n */\nexport const TAG = (index?: Number | String): String =>\n  `${index || 0}${random}${new Date().getTime()}`\n\n/**\n * @description: 初始化识别码\n * @param {Array} dataSource 数据源\n * @return {Array} dataSource\n */\nexport const headingCode = (dataSource: Array<any>, param: CoreParam = {}): Array<any> => {\n  return dataSource.map((item: any, i: Number) => {\n    !item[KEY_NAME] &&\n      (item[KEY_NAME] = item[`${param.keyTarget}`] || item.id || item.key || TAG(i))\n\n    return item\n  })\n}\n\n/**\n * @description: 初始化识别码\n * @param {Intruder} source 数据源\n * @return {Array} dataSource\n */\nexport const headingCodeOne = (source: Intruder): Intruder => {\n  const updateData = { ...source }\n  !updateData[KEY_NAME] && (updateData[KEY_NAME] = source.id || source.key)\n  return updateData\n}\n\n/**\n * @description: 断言数据类型\n * @param {*} T\n * @return {*}\n */\nexport const assert = <T>(data?: T): AssertParam => {\n  const type = toStringType.call(data)\n  return {\n    array: type === '[object Array]',\n    none: !data\n  }\n}\n","/*\n * @Author: tiw\n * @LastEditors: Please set LastEditors\n * @Description: Base\n */\nimport { KEY_NAME } from '../../global/default'\nimport { TAG, assert, headingCodeOne } from '../../helpers/util'\nimport { Intruder, Assignment, AssertParam, CoreParam } from '../../types'\nexport default (data: Array<Intruder>, parameters: CoreParam): Array<Intruder> => {\n  // Default Key\n  const keyTarget: String = parameters.keyTarget || KEY_NAME\n\n  // 给新对象赋一个 key\n  const dataTag: Array<Intruder> = data.map((item: Intruder, i: Number) => {\n    item[`${keyTarget}`] = TAG(i)\n    return item\n  })\n\n  return dataTag\n}\n","/*\n * @Author: tiw\n * @LastEditors: Please set LastEditors\n * @Description: Delete\n */\n\nimport { KEY_NAME } from '../../global/default'\nimport { Intruder, AssertParam } from '../../types'\nimport { assert } from '../../helpers/util'\nexport default (key: any, dataSources: Array<Intruder>): Array<Intruder> => {\n  const ass: Boolean | AssertParam = assert(key)\n\n  const tag: any = ass && ass.array ? [...key] : [key]\n\n  const data = dataSources.filter((item: Intruder) => !tag.includes(item[`${KEY_NAME}`]))\n\n  return data\n}\n","/*\n * @Author: tiw\n * @LastEditors: Please set LastEditors\n * @Description: Update\n */\nimport { Intruder } from '../../types'\nexport default (\n  sourcesData: Array<Intruder>,\n  target: Intruder,\n  data: Intruder\n): Array<Intruder> => {\n  const dataSources = [...sourcesData]\n\n  const sources = dataSources.find((item: any) => item.__key__ === target.__key__)\n\n  for (const key in sources) {\n    const hasOwnProperty = Object.prototype.hasOwnProperty.call(sources, key)\n    hasOwnProperty && key && (sources[key] = data[key])\n  }\n\n  return dataSources\n}\n","/*\n * @Author: tiw\n * @LastEditors: Please set LastEditors\n * @Description: Query / check\n */\n\nexport default (dataSources: Array<any>, target: Object) => {\n  const disTarget = screenTarget(target)\n  const resolve = resolveData(dataSources, disTarget)\n\n  const sources = resolve.filter(<T>(item: T) => !!item)\n  return sources\n}\n\n/**\n * @description: 筛选 Target\n * @param {Object} target\n */\nconst screenTarget = <T>(target: T): T => {\n  let targets: T = { ...target }\n  for (const key in target) {\n    const hasOwnProperty = Object.prototype.hasOwnProperty.call(target, key)\n    if (hasOwnProperty) {\n      const value: any = target[key]\n      const targetAssert = ['', null, undefined].includes(value)\n      targetAssert && delete targets[key]\n    } else {\n      return targets\n    }\n  }\n  return targets\n}\n\n/**\n * @description: Data Resolve\n * @param {Array} dataSources\n */\nconst resolveData = (dataSources: Array<any>, target: Object): Array<any> => {\n  return dataSources.map((item: any) => {\n    let map = new Map()\n    const asserts: Array<Boolean> = assert(item, target)\n    map.set(!asserts.includes(false), item)\n\n    return map.get(true)\n  })\n}\n\n/**\n * @description: 断言\n * @param {Array} item\n * @param {any} target\n * @return {*} 所有结果集合\n */\nconst assert = (item: Array<any>, target: any): Array<Boolean> => {\n  const targetKeys = Object.keys(target)\n  let fact: Array<Boolean> = []\n  targetKeys.map((name: any) => {\n    const is = `${item[name]}` === `${target[name]}`\n    fact.push(is)\n  })\n\n  return fact\n}\n","/*\n * @Author: tiw\n * @LastEditors: Please set LastEditors\n * @Description: 核心入口文件\n */\nimport { TAG, assert, headingCodeOne } from '../helpers/util'\nimport { KEY_NAME } from '../global/default'\nimport { Intruder, Assignment, AssertParam, CoreParam } from '../types'\nimport { save, remove, update, query } from './bll'\n\nclass Core {\n  // Data Source\n  private dataSources: Array<Intruder>\n\n  // Parameter Setting\n  readonly parameters: CoreParam\n\n  // Key Target\n  readonly keyTarget: String\n\n  // Product\n  public product: Array<Intruder> | Intruder\n\n  constructor(source: Array<Intruder>, param: CoreParam) {\n    const data: Array<Intruder> = source || []\n\n    this.dataSources = data\n\n    this.parameters = param\n\n    this.keyTarget = param.keyTarget || KEY_NAME\n\n    this.product = data\n  }\n\n  /**\n   * @description: Add multiple\n   * @param {Array} data 添加的数据\n   * @return {*}\n   */\n\n  public save(data: Array<Intruder>) {\n    let product: Array<Intruder> = [...this.dataSources, ...save(data, this.parameters)]\n\n    this.assignment(product)\n  }\n\n  /**\n   * @description: Add one data\n   * @param {Object} data 添加的数据\n   */\n\n  public saveOne(data: Intruder): void {\n    let product: Array<Intruder> = [...this.dataSources, ...save([data], this.parameters)]\n\n    this.assignment(product)\n  }\n\n  /**\n   * @description: 删除数据\n   * @param {any} key\n   */\n\n  public remove(key: any): void {\n    const data = remove(key, this.dataSources)\n\n    this.assignment(data)\n  }\n\n  /**\n   * @description:\n   * @param {any} target\n   * @param {any} data\n   * @return {*}\n   */\n\n  public update<T>(target: T, data: T): void {\n    const dataSources: Array<any> = update(\n      this.dataSources,\n      headingCodeOne(target),\n      headingCodeOne(data)\n    )\n    this.assignment(dataSources)\n  }\n\n  /**\n   * @description: 查询多个\n   * @param {any} data 查询的对象\n   */\n\n  public find(data: any): void {\n    const sources = query(this.dataSources, data)\n    this.assignment(sources, { sources: false })\n  }\n\n  /**\n   * @description: 查询单个\n   * @param {Object} data 查询的对象\n   * @param {Number} index\n   */\n\n  public findOne(data: Object, index: Number = 0): void {\n    const sources: Array<Intruder> = query(this.dataSources, data)\n    this.assignment(sources[`${index}`], { sources: false })\n  }\n\n  /**\n   * @description: 私有方法\n   * @param {Array} data\n   */\n\n  private assignment(data: Array<Intruder>, config?: Assignment) {\n    const { sources } = config || {}\n    if (sources) this.dataSources = data\n    this.product = data && this.clearKey(data)\n  }\n\n  /**\n   * @description: 清除 __key__\n   * @param {Array} data\n   * @return {*}\n   */\n\n  private clearKey(data: Array<Intruder> | Intruder): Array<Intruder> | Intruder {\n    const ass: Boolean | AssertParam = assert(data)\n    const conversionData = ass.array ? data : [data]\n\n    return conversionData.map((item: Intruder) => {\n      item[KEY_NAME] && delete item[KEY_NAME]\n      return item\n    })\n  }\n}\n\nexport default Core\n","/*\n * @Author: tiw\n * @LastEditors: Please set LastEditors\n * @Description: Main\n */\nimport Core from './core'\nimport { KEY_NAME } from './global/default'\nimport { Intruder, CoreParam } from './types'\nimport { headingCode } from './helpers/util'\nclass Idmc extends Core {\n  constructor(dataSource: Array<Intruder> = [], param: CoreParam = {}) {\n    // 初始化识别码\n    headingCode(dataSource || [], { ...param, defaultKeyTarget: param.keyTarget || KEY_NAME })\n\n    super(dataSource, param)\n  }\n}\nexport default Idmc\n"],"names":["assert"],"mappings":"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"}